generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id               Int                @id(map: "company_pkey") @default(autoincrement())
  name             String?            @db.VarChar(255)
  company_employee Company_employee[]
}

model Company_employee {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  company_id Int?
  company    Company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_company")
  user       User?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
}

model Profile_image {
  id        Int    @id(map: "profile_image_pkey") @default(autoincrement())
  image_url String @db.VarChar(255)
  user      User[]
}

model Role {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
  user User[]
}

model User {
  id                Int                @id(map: "user_pkey") @unique @default(autoincrement())
  email             String             @unique @db.VarChar(255)
  role_id           Int
  password          String?            @db.VarChar(500)
  username          String             @unique(map: "user_username_key") @db.VarChar(255)
  phone_number      String             @unique @db.VarChar(255)
  first_name        String             @db.VarChar(255)
  last_name         String             @db.VarChar(255)
  profile_image_id  Int?
  company_employees Company_employee[]
  profile_images    Profile_image?     @relation(fields: [profile_image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_image")
  role              Role               @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rules")
}
